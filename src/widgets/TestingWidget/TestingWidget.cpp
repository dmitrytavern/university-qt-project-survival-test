#include "TestingWidget.h"

const QString UI_HELPER = "Оцініть це питання від 0 до 3:\n  0 - навіть не чули про це;\n  1 - чули, але поки що не застосовуємо;\n  2 - застосовується частково;\n  3 - застосовується повною мірою.";
const QString UI_BUTTON_NEXT = "Далі";

const std::vector<TestingQuestionData> questionsData = {
    {"1. Концепція визначає ясні недвозначні цілі", "В проекті визначено чіткі, зрозумілі та однозначні цілі, які не викликають двозначності та розуміються однаково всіма учасниками проекту. Це важливо для того, щоб усі члени команди мали чітке уявлення про цілі проекту та могли працювати узгоджено та ефективно для їх досягнення. Наявність ясних цілей також допомагає уникнути непотрібних конфліктів та сприяє більш точній оцінці прогресу проекту."},
    {"2. Усі члени команди вважають концепцію реалістичною", "Усі члени команди вважають, що концепція проекту є реалістичною"},
    {"3. У проекту є обґрунтування економічної ефективності", "Проект має документ, що містить економічні розрахунки, оцінку очікуваного прибутку та інші економічні параметри."},
    {"4. Розроблений прототип користувацького інтерфейсу", "У проекті був розроблений прототип, який демонструє зовнішній вигляд і функціональність інтерфейсу користувача."},
    {"5. Розроблена специфікація цільових функцій програмного продукту", "У процесі розробки проекту було створено документацію, що описує функціональні можливості програмного продукту, які мають бути реалізовані задля досягнення його цілей та завдань."},
    {"6. З кінцевими користувачами продукту налагоджено двосторонню зв'язок", "На етапі розробки продукту було встановлено взаємодію з кінцевими користувачами та зворотний зв'язок було організовано."},
    {"7. Є детальний письмовий план розробки продукту", "Для проекту був розроблений детальний план, який містить інформацію про цілі проекту, етапи його розробки, ресурси, необхідні для кожного етапу, терміни та інші аспекти проекту."},
    {"8. До списку завдань проекту включені «вторинні» завдання.", "У проекті були враховані всі необхідні завдання, навіть ті, які можуть здатися менш значущими або легко забуті."},
    {"9. Після кожної фази проекту оновлюється розклад і бюджет", "Під час виконання проекту регулярно оновлюється розклад та бюджет, щоб відстежувати прогрес проекту та відповідність витратам."},
    {"10. Архітектура та проектні рішення задокументовані", "Для проекту створено документацію, що описує його архітектуру та прийняті проектні рішення."},
    {"11. Є план забезпечення якості, що визначає тестування та рецензування", "У проекті передбачено план, в якому описані підходи та методи, які будуть використовуватись для забезпечення якості продукту."},
    {"12. Визначений план багатоетапної поставки продукту", "Для проекту визначено план, який описує, як продукт поставлятиметься користувачеві у кількох етапах."},
    {"13. В плані враховані навчання, вихідні, відпустки, хвороби", "План проекту враховує не лише робочі дні, а й періоди, коли працівники будуть відсутні з різних причин, таких як навчання, вихідні, відпустки та лікарняні."},
    {"14. План проекту та розклад одобрені всіма учасниками команди", "Всі учасники команди, включаючи керівництво проекту, ознайомилися з планом проекту та розкладом робіт та висловили свою згоду з ними."},
    {"15. У проекта є куратор. Це такий топ-менеджер виконавчої компанії, який особисто зацікавлений в успіху даного проекту", "В рамках проекту було призначено куратора - високопоставленого представника компанії, який особисто зацікавлений в успішній реалізації проекту."},
    {"16. У проекта є менеджер, причому тільки один", "У проекті призначено одну особу, відповідальну за управління та координацію всіх робіт, пов'язаних з проектом."},
    {"17. В плані проекту визначені «бінарні» контрольні точки", "Визначено моменти в ході проекту, на яких необхідно приймати рішення щодо подальшого продовження або призупинення проекту."},
    {"18. Усі зацікавлені сторони можуть отримати необхідну інформацію про хід проекту", "На проекті має бути реалізована система звітності, яка дозволяє надавати інформацію про хід роботи проекту всім заінтересованим сторонам у зручній формі."},
    {"19. Між керівництвом та розробниками встановлені довірчі стосунки", "У команді проекту існує відкрита та довірча обстановка між керівництвом та розробниками."},
    {"20. Встановлена процедура управління змінами в проекті", "В рамках проекту встановлено чіткі правила та процедури для управління змінами у проекті."},
    {"21. Визначені особи, відповідальні за прийняття рішень щодо змін у проекті", "У проекті визначено конкретних людей або груп людей, які прийматимуть рішення про внесення змін до проекту."},
    {"22. План, розклад та статусна інформація проекту доступні кожному учаснику", "В рамках проекту було розроблено систему, яка забезпечує доступ до плану, розкладу та статусної інформації щодо проекту для всіх учасників."},
    {"23. Код системи проходить автоматичне рецензування", "У проекті встановлено автоматизований засіб перевірки коду на відповідність певним стандартам та правилам програмування."},
    {"24. Застосовується система управління дефектами", "У проекті використовується спеціальна система для відстеження та управління помилками (дефектами) у процесі розробки."},
    {"25. Існує список ризиків проекту. Здійснюється його регулярний аналіз та оновлення", "На проекті визначено список потенційних ризиків, які можуть виникнути під час його виконання"},
    {"26. Керівник проекту відстежує виникнення нових ризиків", "У проекті встановлено процес моніторингу та управління ризиками"},
    {"27. Для кожного підрядника визначено особу, відповідальну за роботу з ним", "У проекті визначено контрактні відносини з підрядниками, і для кожного з них визначено конкретну особу, відповідальну за взаємодію та координацію роботи з нею."},
    {"28. Досвід команди достатній для виконання проекту", "Команда, яка працюватиме над проектом, має необхідний рівень знань та досвіду у галузі, пов'язаної з проектом."},
    {"29. У команди достатня компетенція в прикладній області", "Учасники проекту мають необхідні знання та навички в області, пов'язаній з проектом."},
    {"30. У проекті є технічний лідер", "У команді проекту є людина, яка має високий рівень знань та досвіду в технічній галузі, і яка відповідальна за розробку технічних рішень та координацію роботи команди у технічному аспекті проекту."},
    {"31. Кількість персоналу достатня", "На проекті задіяно достатню кількість людей, щоб виконати всі роботи відповідно до графіка та плану проекту."},
    {"32. У команди є достатня єдність", "Члени команди добре знайомі один з одним, працюють ефективно разом, поважають та довіряють один одному, а також мають спільну мету та розуміння того, як досягти цієї мети."},
    {"33. Усі учасники присвячені проекту", "Усі учасники команди проекту є відданими та зацікавленими в успіху проекту."},
};

TestingWidget::TestingWidget() : QWidget()
{
  nextButton = new QPushButton(UI_BUTTON_NEXT);
  nextButton->setEnabled(false);

  answerLineEdit = new QLineEdit(this);
  answerLineEdit->setValidator(new QIntValidator(0, 3, this));

  currentQuestionResult = 0;
  currentQuestionWidget = -1;

  questionTitle = new AppTitle();
  questionDescription = new AppPlainText();

  QLabel *descriptionHelper = new AppPlainText(UI_HELPER);

  QVBoxLayout *vbox = new QVBoxLayout();
  vbox->addWidget(questionTitle);
  vbox->addWidget(questionDescription);
  vbox->addWidget(descriptionHelper);
  vbox->addStretch();
  vbox->setAlignment(Qt::AlignTop);

  QHBoxLayout *hbox = new QHBoxLayout();
  hbox->addWidget(answerLineEdit);
  hbox->addWidget(nextButton);
  hbox->setStretchFactor(answerLineEdit, 1);
  hbox->setAlignment(Qt::AlignBottom);

  QVBoxLayout *layout = new QVBoxLayout(this);
  layout->addLayout(vbox, 0);
  layout->addLayout(hbox, 1);
  this->setNextQuestion();

  connect(nextButton, &QPushButton::clicked, this, &TestingWidget::onPressNextHandler);
  connect(answerLineEdit, &QLineEdit::textChanged, this, &TestingWidget::onInputEditLineHandler);
}

void TestingWidget::onPressNextHandler()
{
  currentQuestionResult += answerLineEdit->text().toInt();
  answerLineEdit->clear();
  nextButton->setEnabled(false);

  if (questionsData.size() - 1 > currentQuestionWidget)
  {
    this->setNextQuestion();
  }
  else
  {
    emit finished(currentQuestionResult);
  }
}

void TestingWidget::setNextQuestion()
{
  currentQuestionWidget++;
  questionTitle->setText(questionsData[currentQuestionWidget].title);
  questionDescription->setText(questionsData[currentQuestionWidget].description);
}

void TestingWidget::onInputEditLineHandler(const QString &text)
{
  nextButton->setEnabled(validateInput(text));
}

bool TestingWidget::validateInput(const QString &text)
{
  return !text.isEmpty() && text.toInt() >= 0 && text.toInt() <= 3;
}
